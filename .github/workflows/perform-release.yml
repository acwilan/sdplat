name: Perform Release

on:
  workflow_dispatch:
    inputs:
      bumpType:
        description: 'Version bump type (major, minor, patch)'
        required: true
        default: 'patch'

jobs:

  start-release:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    permissions:
      contents: write # Allow the workflow to write to the repository
      pull-requests: write # Allow the workflow to create pull requests
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Required to retrieve commit history for changelog generation

    - name: Configure Git user
      run: |
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"
        git config --global gitflow.branch.master main

    - name: Setup git flow
      run: |
        sudo apt-get install git-flow
        git flow init -d

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Pull develop branch
      run: |
        git checkout develop
        git pull

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Bump version
      id: bump-version
      env:
        BUMP_TYPE: ${{ github.event.inputs.bumpType }}
      run: |
          echo "Bump type is '$BUMP_TYPE'"
          if [ "$BUMP_TYPE" == "major" ]; then
            yarn --cwd ./ui version --major --no-git-tag-version
            yarn version --major --no-git-tag-version
          elif [ "$BUMP_TYPE" == "minor" ]; then
            yarn --cwd ./ui version --minor --no-git-tag-version
            yarn version --minor --no-git-tag-version
          else
            yarn --cwd ./ui version --patch --no-git-tag-version
            yarn version --patch --no-git-tag-version
          fi
          new_version=$(node -p "require('./ui/package.json').version")
          echo "new_version=$new_version" >> $GITHUB_OUTPUT

    - name: Start git flow release
      run: |
        git stash
        git flow release start v${{ steps.bump-version.outputs.new_version }}
        git stash pop
        git commit -am "chore: Bump release version to v${{ steps.bump-version.outputs.new_version }}"
  
    - name: Generate changelog
      id: generate-changelog
      run: |
        npx conventional-changelog-cli --output-unreleased --preset angular > changelog.txt
        cat changelog.txt >> CHANGELOG.md.tmp
        echo "## Previous Releases" >> CHANGELOG.md.tmp
        cat CHANGELOG.md >> CHANGELOG.md.tmp
        mv CHANGELOG.md.tmp CHANGELOG.md
        git commit -am "doc: Add changelog"

    - name: Finish release
      run: |
        git flow release finish v${{ steps.bump-version.outputs.new_version }} -m "Release v${{ steps.bump-version.outputs.new_version }}"
        git push origin main
        git push origin develop
        git push --tags

    - name: Bump development version
      run: |
        git checkout develop
        yarn --cwd ./ui version prerelease --preid=dev --no-git-tag-version --new-version prepatch
        yarn version prerelease --preid=dev --no-git-tag-version --new-version prepatch
        dev_version=$(node -p "require('./ui/package.json').version")
        git commit -am "chore: bump development version to $dev_version"
        git push origin develop

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.bump-version.outputs.new_version }}
        release_name: Release v${{ steps.bump-version.outputs.new_version }}
        body_path: changelog.txt
        generate_release_notes: true
