name: Start Release

on:
  workflow_dispatch:
    inputs:
      bumpType:
        description: 'Version bump type (major, minor, patch)'
        required: true
        default: 'patch'

jobs:

  start-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Allow the workflow to write to the repository
      pull-requests: write # Allow the workflow to create pull requests
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Required to retrieve commit history for changelog generation

    - name: Configure Git user
      run: |
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Pull develop branch
      run: |
        git checkout develop
        git pull

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Bump version
      id: bump-version
      env:
        BUMP_TYPE: ${{ github.event.inputs.bumpType }}
      run: |
          if [ "$BUMP_TYPE" == "major" ]; then
            yarn --cwd ./ui version --major --no-git-tag-version
            yarn version --major --no-git-tag-version
          elif [ "$BUMP_TYPE" == "minor" ]; then
            yarn --cwd ./ui version --minor --no-git-tag-version
            yarn version --minor --no-git-tag-version
          else
            yarn --cwd ./ui version --patch --no-git-tag-version
            yarn version --patch --no-git-tag-version
          fi
          new_version=$(node -p "require('./ui/package.json').version")
          echo "new_version=$new_version" >> $GITHUB_OUTPUT
          git commit -am "chore: bump release version to $new_version"
  
    - name: Create release branch
      id: create-branch
      run: |
          release_branch="release/v${{ steps.bump-version.outputs.new_version }}"
          git checkout -b $release_branch
          echo "release_branch=$release_branch" >> $GITHUB_OUTPUT
  
    - name: Generate changelog
      id: generate-changelog
      run: |
        npx conventional-changelog-cli --output-unreleased --preset angular > changelog.txt

    - name: Update changelog
      run: |
        cat changelog.txt >> CHANGELOG.md
        echo "## Previous Releases" >> CHANGELOG.md
        cat CHANGELOG.md >> CHANGELOG.md.tmp
        mv CHANGELOG.md.tmp CHANGELOG.md
        git add CHANGELOG.md
        git commit -m "docs: update changelog for v${{ steps.bump-version.outputs.new_version }}"

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v6
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ steps.create-branch.outputs.release_branch }}
        base: main
        title: 'Release v${{ steps.bump-version.outputs.new_version }}'
        body-path: changelog.txt
        reviewers: acwilan
        reset: false
